<?php
/**
* This class has been generated by TheliaStudio
* For more information, see https://github.com/thelia-modules/TheliaStudio
*/

namespace DealerGoogleTimeZone\Loop\Base;

use Propel\Runtime\ActiveQuery\Criteria;
use Thelia\Core\Template\Element\BaseLoop;
use Thelia\Core\Template\Element\LoopResult;
use Thelia\Core\Template\Element\LoopResultRow;
use Thelia\Core\Template\Element\PropelSearchLoopInterface;
use Thelia\Core\Template\Loop\Argument\Argument;
use Thelia\Core\Template\Loop\Argument\ArgumentCollection;
use Thelia\Type\BooleanOrBothType;
use DealerGoogleTimeZone\Model\DealerGoogletimezoneQuery;

/**
 * Class DealerGoogletimezone
 * @package DealerGoogleTimeZone\Loop\Base
 * @author TheliaStudio
 */
class DealerGoogletimezone extends BaseLoop implements PropelSearchLoopInterface
{
    protected $timestampable = true;
    protected $versionable = true;

    /**
     * @param LoopResult $loopResult
     *
     * @return LoopResult
     */
    public function parseResults(LoopResult $loopResult)
    {

        /** @var \DealerGoogleTimeZone\Model\DealerGoogletimezone $entry */
        foreach ($loopResult->getResultDataCollection() as $entry) {
            $dateTimeDealer = $dayOfTheWeek = $diffWithGMT = $summerTimeActived = null;
            if($entry->getTimezone()){
                date_default_timezone_set($entry->getTimezone());
                $dateTimeDealer = date("Y-m-d H:i:s");
                $dayOfTheWeek = date("N")-1;
                $diffWithGMT = date("P");
                $summerTimeActived = date("I");
            }

            $row = new LoopResultRow($entry);

            $row
                ->set("ID", $entry->getId())
                ->set("DEALER_ID", $entry->getDealerId())
                ->set("TIMEZONE", $entry->getTimezone())
                ->set("DATETIME", $dateTimeDealer)
                ->set("DAY_OF_THE_WEEK", $dayOfTheWeek)
                ->set("DIFF_WITH_GMT", $diffWithGMT)
                ->set("SUMMER_TIME_ACTIVED", $summerTimeActived)
            ;

            $this->addMoreResults($row, $entry);

            $loopResult->addRow($row);
        }

        return $loopResult;
    }

    /**
     * Definition of loop arguments
     *
     * example :
     *
     * public function getArgDefinitions()
     * {
     *  return new ArgumentCollection(
     *
     *       Argument::createIntListTypeArgument('id'),
     *           new Argument(
     *           'ref',
     *           new TypeCollection(
     *               new Type\AlphaNumStringListType()
     *           )
     *       ),
     *       Argument::createIntListTypeArgument('category'),
     *       Argument::createBooleanTypeArgument('new'),
     *       ...
     *   );
     * }
     *
     * @return \Thelia\Core\Template\Loop\Argument\ArgumentCollection
     */
    protected function getArgDefinitions()
    {
        return new ArgumentCollection(
            Argument::createIntListTypeArgument("id"),
            Argument::createIntListTypeArgument("dealer_id"),
            Argument::createAnyTypeArgument("timezone"),
            Argument::createEnumListTypeArgument(
                "order",
                [
                    "id",
                    "id-reverse",
                    "dealer_id",
                    "dealer_id-reverse",
                    "timezone",
                    "timezone-reverse",
                ],
                "id"
            )
        );
    }

    /**
     * this method returns a Propel ModelCriteria
     *
     * @return \Propel\Runtime\ActiveQuery\ModelCriteria
     */
    public function buildModelCriteria()
    {
        $query = new DealerGoogletimezoneQuery();

        if (null !== $id = $this->getId()) {
            $query->filterById($id);
        }

        if (null !== $dealer_id = $this->getDealerId()) {
            $query->filterByDealerId($dealer_id);
        }

        if (null !== $timezone = $this->getTimezone()) {
            $timezone = array_map("trim", explode(",", $timezone));
            $query->filterByTimezone($timezone);
        }

        foreach ($this->getOrder() as $order) {
            switch ($order) {
                case "id":
                    $query->orderById();
                    break;
                case "id-reverse":
                    $query->orderById(Criteria::DESC);
                    break;
                case "dealer_id":
                    $query->orderByDealerId();
                    break;
                case "dealer_id-reverse":
                    $query->orderByDealerId(Criteria::DESC);
                    break;
                case "timezone":
                    $query->orderByTimezone();
                    break;
                case "timezone-reverse":
                    $query->orderByTimezone(Criteria::DESC);
                    break;
            }
        }

        return $query;
    }

    protected function addMoreResults(LoopResultRow $row, $entryObject)
    {
    }
}
